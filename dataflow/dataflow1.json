{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "HFCItemSchoolPrice"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText2",
						"type": "DatasetReference"
					},
					"name": "HFCKitListComponents"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText3",
						"type": "DatasetReference"
					},
					"name": "HFCTransactionsKitsAssembliesInventory"
				},
				{
					"dataset": {
						"referenceName": "Excel1",
						"type": "DatasetReference"
					},
					"name": "HFCAssemblyListComponents"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText4",
						"type": "DatasetReference"
					},
					"name": "HFCfinaljoinedfile",
					"rejectedDataLinkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "join3"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {Internal ID} as string,",
				"          Name as string,",
				"          {Display Name} as string,",
				"          Type as string,",
				"          {School Price} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> HFCItemSchoolPrice",
				"source(output(",
				"          {Internal ID} as string,",
				"          {Kit Internal ID} as string,",
				"          {Kit Name} as string,",
				"          {Kit Display Name} as string,",
				"          {Component Internal ID} as string,",
				"          {Component Name} as string,",
				"          {Component Display Name} as string,",
				"          {Component Qty} as string,",
				"          {Component UOM} as string,",
				"          {20% Off Retail} as string,",
				"          {30% Off Retail} as string,",
				"          {47% Off Retail} as string,",
				"          {50% Off Retail} as string,",
				"          {53% Off Retail} as string,",
				"          {55% Off Retail} as string,",
				"          {58% Off Retail} as string,",
				"          {60% Off Retail} as string,",
				"          {63% Off Retail} as string,",
				"          {64% Off Retail} as string,",
				"          {65% Off Retail} as string,",
				"          {66% Off Retail} as string,",
				"          {70% Off Retail} as string,",
				"          {75% Off Retail} as string,",
				"          {92% Off Retail} as string,",
				"          Complimentary as string,",
				"          FAMIS as string,",
				"          {Free with Order} as string,",
				"          PCT9 as string,",
				"          Sample as string,",
				"          School as string,",
				"          {Online Price} as string,",
				"          {Formula (Numeric)} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> HFCKitListComponents",
				"source(output(",
				"          {Internal ID} as string,",
				"          Type1 as string,",
				"          Name as string,",
				"          {Display Name} as string,",
				"          {Document Number4} as string,",
				"          Date as string,",
				"          Type6 as string,",
				"          {Document Number7} as string,",
				"          {Sold Quantity} as string,",
				"          {Sold Price} as string,",
				"          {Sold Total Amount} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> HFCTransactionsKitsAssembliesInventory",
				"source(output(",
				"          {Internal ID} as string,",
				"          {Assembly Item Name} as string,",
				"          {BOM Name} as string,",
				"          {Revision Name} as string,",
				"          {Internal ID_1} as string,",
				"          {BOM Component Name} as string,",
				"          {BOM Component Yeild} as string,",
				"          {BOM Component Description } as string,",
				"          {BOM Whole Name} as string,",
				"          {BOM Component Quantity} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> HFCAssemblyListComponents",
				"HFCAssemblyListComponents, HFCKitListComponents join({BOM Component Name} == {Component Name},",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1, HFCItemSchoolPrice join({Kit Name} == Name,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join3",
				"join3 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     filePattern:'HFCFinalOutput[n].csv',",
				"     truncate: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          {Assembly Name} = {Assembly Item Name},",
				"          {Component Name} = {BOM Component Name},",
				"          {Component Quantity} = {BOM Component Quantity},",
				"          {Component Price} = School",
				"     )) ~> HFCfinaljoinedfile"
			]
		}
	}
}